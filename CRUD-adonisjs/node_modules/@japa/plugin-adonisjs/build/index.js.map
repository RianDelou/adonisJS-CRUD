{"version":3,"sources":["../index.ts","../src/extend_context.ts","../src/verify_prompts.ts"],"sourcesContent":["/*\n * @japa/plugin-adonisjs\n *\n * (c) Japa\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport './src/types/extended.js'\nimport type { PluginFn } from '@japa/runner/types'\nimport { CookieClient } from '@adonisjs/core/http'\nimport type { ApplicationService } from '@adonisjs/core/types'\n\nimport { extendContext } from './src/extend_context.js'\nimport { verifyPrompts } from './src/verify_prompts.js'\n\n/**\n * Find if a given package can be imported.\n */\nasync function canImport(pkg: string) {\n  try {\n    await import(pkg)\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * The AdonisJS plugin acts as a bridge between an AdonisJS application\n * and the Japa test runner.\n *\n * The plugin extends the Japa runner and the ecosystem plugins to have to\n * first class knowledge about AdonisJS\n */\nexport function pluginAdonisJS(app: ApplicationService, options?: { baseURL: string }) {\n  const pluginFn: PluginFn = async function ({ runner }) {\n    if (app.container.hasAllBindings(['router', 'repl'])) {\n      extendContext(await app.container.make('router'), await app.container.make('repl'))\n    }\n\n    /**\n     * Extend \"@japa/api-client\" plugin\n     */\n    if ((await canImport('@japa/api-client')) && app.container.hasBinding('encryption')) {\n      const { extendApiClient } = await import('./src/extend_api_client.js')\n      extendApiClient(new CookieClient(await app.container.make('encryption')))\n    }\n\n    /**\n     * Extend \"@japa/browser-client\" plugin\n     */\n    if (\n      (await canImport('@japa/browser-client')) &&\n      (await canImport('playwright')) &&\n      app.container.hasBinding('encryption')\n    ) {\n      const { extendBrowserClient } = await import('./src/extend_browser_client.js')\n      extendBrowserClient(\n        new CookieClient(await app.container.make('encryption')),\n        options?.baseURL\n      )\n    }\n\n    /**\n     * Verify prompts that were trapped but never triggered\n     */\n    if (app.container.hasBinding('ace')) {\n      const ace = await app.container.make('ace')\n      verifyPrompts(ace, runner)\n    }\n  }\n  return pluginFn\n}\n","/*\n * @japa/plugin-adonisjs\n *\n * (c) Japa\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport './types/extended.js'\nimport { Repl } from '@adonisjs/core/repl'\nimport { TestContext } from '@japa/runner/core'\nimport type { Router } from '@adonisjs/core/http'\n\nimport debug from './debug.js'\n\nexport function extendContext(router: Router, repl: Repl) {\n  debug('extending japa context with adonisjs specific methods')\n\n  TestContext.macro('route', function (this: TestContext, routeIdentifier, params?, options?) {\n    return router.makeUrl(routeIdentifier, params, options)\n  })\n\n  TestContext.macro('startRepl', function (this: TestContext, context) {\n    this.test.resetTimeout()\n\n    return new Promise((resolve) => {\n      /**\n       * Share context\n       */\n      repl.ready(() => {\n        Object.keys(context).forEach((key) => {\n          repl.server!.context[key] = context[key]\n        })\n      })\n\n      /**\n       * Resolve promise\n       */\n      repl.server!.on('exit', () => {\n        resolve()\n      })\n\n      /**\n       * Start REPL\n       */\n      repl.start()\n    })\n  })\n}\n","/*\n * @japa/plugin-adonisjs\n *\n * (c) Japa\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { Kernel } from '@adonisjs/core/ace'\nimport type { Runner } from '@japa/runner/core'\n\n/**\n * Verifies prompts after every ace test\n */\nexport function verifyPrompts(ace: Kernel, runner: Runner) {\n  runner.onSuite((suite) => {\n    suite.onGroup((group) => {\n      group.each.teardown(() => {\n        ace.prompt.traps.verify()\n      })\n    })\n\n    suite.onTest((test) => {\n      test.teardown(() => {\n        ace.prompt.traps.verify()\n      })\n    })\n  })\n}\n"],"mappings":";;;;;AAWA,SAAS,oBAAoB;;;ACA7B,SAAS,mBAAmB;AAKrB,SAAS,cAAc,QAAgB,MAAY;AACxD,gBAAM,uDAAuD;AAE7D,cAAY,MAAM,SAAS,SAA6B,iBAAiB,QAAS,SAAU;AAC1F,WAAO,OAAO,QAAQ,iBAAiB,QAAQ,OAAO;AAAA,EACxD,CAAC;AAED,cAAY,MAAM,aAAa,SAA6B,SAAS;AACnE,SAAK,KAAK,aAAa;AAEvB,WAAO,IAAI,QAAQ,CAAC,YAAY;AAI9B,WAAK,MAAM,MAAM;AACf,eAAO,KAAK,OAAO,EAAE,QAAQ,CAAC,QAAQ;AACpC,eAAK,OAAQ,QAAQ,GAAG,IAAI,QAAQ,GAAG;AAAA,QACzC,CAAC;AAAA,MACH,CAAC;AAKD,WAAK,OAAQ,GAAG,QAAQ,MAAM;AAC5B,gBAAQ;AAAA,MACV,CAAC;AAKD,WAAK,MAAM;AAAA,IACb,CAAC;AAAA,EACH,CAAC;AACH;;;AClCO,SAAS,cAAc,KAAa,QAAgB;AACzD,SAAO,QAAQ,CAAC,UAAU;AACxB,UAAM,QAAQ,CAAC,UAAU;AACvB,YAAM,KAAK,SAAS,MAAM;AACxB,YAAI,OAAO,MAAM,OAAO;AAAA,MAC1B,CAAC;AAAA,IACH,CAAC;AAED,UAAM,OAAO,CAAC,SAAS;AACrB,WAAK,SAAS,MAAM;AAClB,YAAI,OAAO,MAAM,OAAO;AAAA,MAC1B,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH;;;AFTA,eAAe,UAAU,KAAa;AACpC,MAAI;AACF,UAAM,OAAO;AACb,WAAO;AAAA,EACT,QAAQ;AACN,WAAO;AAAA,EACT;AACF;AASO,SAAS,eAAe,KAAyB,SAA+B;AACrF,QAAM,WAAqB,eAAgB,EAAE,OAAO,GAAG;AACrD,QAAI,IAAI,UAAU,eAAe,CAAC,UAAU,MAAM,CAAC,GAAG;AACpD,oBAAc,MAAM,IAAI,UAAU,KAAK,QAAQ,GAAG,MAAM,IAAI,UAAU,KAAK,MAAM,CAAC;AAAA,IACpF;AAKA,QAAK,MAAM,UAAU,kBAAkB,KAAM,IAAI,UAAU,WAAW,YAAY,GAAG;AACnF,YAAM,EAAE,gBAAgB,IAAI,MAAM,OAAO,iCAA4B;AACrE,sBAAgB,IAAI,aAAa,MAAM,IAAI,UAAU,KAAK,YAAY,CAAC,CAAC;AAAA,IAC1E;AAKA,QACG,MAAM,UAAU,sBAAsB,KACtC,MAAM,UAAU,YAAY,KAC7B,IAAI,UAAU,WAAW,YAAY,GACrC;AACA,YAAM,EAAE,oBAAoB,IAAI,MAAM,OAAO,qCAAgC;AAC7E;AAAA,QACE,IAAI,aAAa,MAAM,IAAI,UAAU,KAAK,YAAY,CAAC;AAAA,QACvD,SAAS;AAAA,MACX;AAAA,IACF;AAKA,QAAI,IAAI,UAAU,WAAW,KAAK,GAAG;AACnC,YAAM,MAAM,MAAM,IAAI,UAAU,KAAK,KAAK;AAC1C,oBAAc,KAAK,MAAM;AAAA,IAC3B;AAAA,EACF;AACA,SAAO;AACT;","names":[]}