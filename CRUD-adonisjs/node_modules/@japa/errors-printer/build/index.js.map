{"version":3,"sources":["../src/printer.ts"],"sourcesContent":["/*\n * @japa/errors-printer\n *\n * (c) Japa\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n// @ts-ignore-error\nimport forTerminal from 'youch-terminal'\n\nimport Youch from 'youch'\nimport { EOL } from 'node:os'\nimport colors from '@poppinss/colors'\nimport supportsColor from 'supports-color'\nimport { diff as jestDiff } from 'jest-diff'\n\nconst ansi = supportsColor.stdout ? colors.ansi() : colors.silent()\n\nconst { columns } = process.stdout\nconst pointer = process.platform === 'win32' && !process.env.WT_SESSION ? '>' : '❯'\n\n/**\n * Pretty prints the test runner errors\n */\nexport class ErrorsPrinter {\n  #options: {\n    stackLinesCount: number\n    framesMaxLimit: number\n  }\n\n  constructor(options?: { stackLinesCount?: number; framesMaxLimit?: number }) {\n    this.#options = { stackLinesCount: 5, framesMaxLimit: 3, ...options }\n  }\n\n  /**\n   * Get Youch's JSON report of the given error\n   */\n  async #getYouchJson(error: any) {\n    const youch = new Youch(\n      error,\n      {},\n      {\n        postLines: this.#options.stackLinesCount,\n        preLines: this.#options.stackLinesCount,\n      }\n    )\n    return youch.toJSON()\n  }\n\n  /**\n   * Returns human readable message for error phase\n   */\n  #getPhaseTitle(phase: string) {\n    switch (phase) {\n      case 'setup':\n        return 'Setup hook'\n      case 'setup:cleanup':\n        return 'Setup hook cleanup function'\n      case 'teardown':\n        return 'Teardown hook'\n      case 'teardown:cleanup':\n        return 'Teardown hook cleanup function'\n    }\n  }\n\n  /**\n   * Displays the error stack for a given error\n   */\n  async #displayErrorStack(error: any) {\n    const jsonResponse = await this.#getYouchJson(error)\n    console.log(\n      forTerminal(jsonResponse, {\n        displayShortPath: true,\n        framesMaxLimit: this.#options.framesMaxLimit,\n        displayMainFrameOnly: false,\n      }).trimEnd()\n    )\n  }\n\n  /**\n   * Display chai assertion error\n   */\n  async #displayAssertionError(error: any) {\n    /**\n     * Display diff\n     */\n    console.log()\n    console.log(`  Assertion Error: ${error.message}`)\n    console.log()\n\n    if (!('showDiff' in error) || error.showDiff) {\n      const { actual, expected } = error\n      const diff = jestDiff(expected, actual, {\n        expand: true,\n        includeChangeCounts: true,\n      })\n      console.log(diff)\n    }\n\n    /**\n     * Display error stack with the main frame only\n     */\n    const jsonResponse = await this.#getYouchJson(error)\n    console.log(\n      forTerminal(jsonResponse, {\n        hideErrorTitle: true,\n        hideMessage: true,\n        displayShortPath: true,\n        displayMainFrameOnly: true,\n      }).trimEnd()\n    )\n  }\n\n  /**\n   * Display jest assertion error\n   */\n  async #displayJestError(error: any) {\n    /**\n     * Display diff\n     */\n    console.log()\n    console.log(\n      `  Assertion Error:${error.message\n        .split(EOL)\n        .map((line: string) => `  ${line}`)\n        .join(EOL)}`\n    )\n\n    /**\n     * Display error stack with the main frame only\n     */\n    const jsonResponse = await this.#getYouchJson(error)\n    console.log(\n      forTerminal(jsonResponse, {\n        hideErrorTitle: true,\n        hideMessage: true,\n        displayShortPath: true,\n        displayMainFrameOnly: true,\n      }).trimEnd()\n    )\n  }\n\n  /**\n   * Prints a section with heading and borders around it\n   */\n  printSectionBorder(paging: string) {\n    const border = '─'.repeat(columns - (paging.length + 1))\n    console.log(ansi.red(`${border}${paging}─`))\n  }\n\n  /**\n   * Prints section header with a centered title and\n   * borders around it\n   */\n  printSectionHeader(title: string) {\n    const whitspacesWidth = (columns - title.length) / 2\n    const [lhsWidth, rhsWidth] = Number.isInteger(whitspacesWidth)\n      ? [whitspacesWidth, whitspacesWidth]\n      : [whitspacesWidth - 1, whitspacesWidth + 1]\n\n    const borderLeft = ansi.red('─'.repeat(lhsWidth - 1))\n    const borderRight = ansi.red('─'.repeat(rhsWidth))\n    console.log(`${borderLeft}${ansi.bgRed().black(` ${title} `)}${borderRight}`)\n  }\n\n  /**\n   * Pretty print the error to the console\n   */\n  async printError(error: any) {\n    /**\n     * Values are not object objects are printed as it is.\n     */\n    if (error === null || Array.isArray(error) || typeof error !== 'object') {\n      console.log(`Error: ${error}`)\n      return\n    }\n\n    if ('actual' in error && 'expected' in error) {\n      await this.#displayAssertionError(error)\n      return\n    }\n\n    if ('matcherResult' in error) {\n      await this.#displayJestError(error)\n      return\n    }\n\n    await this.#displayErrorStack(error)\n  }\n\n  /**\n   * Print summary errors\n   */\n  async printErrors(errors: { title: string; phase: string; error: any }[]) {\n    const errorsCount = errors.length\n    let index = 0\n\n    for (let { phase, error, title } of errors) {\n      const label = phase === 'test' ? title : `${title}: ${this.#getPhaseTitle(phase)}`\n      console.log()\n      console.log(`  ${pointer} ${ansi.underline(label)}`)\n      await this.printError(error)\n      this.printSectionBorder(`[${++index}/${errorsCount}]`)\n    }\n  }\n}\n"],"mappings":"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","names":[]}