{"version":3,"sources":["../configure.ts","../src/symbols.ts","../src/define_config.ts","../index.ts"],"sourcesContent":["/*\n * @adonisjs/auth\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { presetAuth } from '@adonisjs/presets/auth'\nimport type Configure from '@adonisjs/core/commands/configure'\n\n/**\n * Configures the auth package\n */\nexport async function configure(command: Configure) {\n  const codemods = await command.createCodemods()\n  let guard: string | undefined = command.parsedFlags.guard\n\n  /**\n   * Prompts user to select a guard when not mentioned via\n   * the CLI\n   */\n  if (guard === undefined) {\n    guard = await command.prompt.choice(\n      'Select the auth guard you want to use',\n      [\n        {\n          name: 'session',\n          message: 'Session',\n        },\n        {\n          name: 'access_tokens',\n          message: 'Opaque access tokens',\n        },\n        {\n          name: 'basic_auth',\n          message: 'Basic Auth',\n        },\n      ],\n      {\n        validate(value) {\n          return !!value\n        },\n      }\n    )\n  }\n\n  /**\n   * Ensure selected or guard defined via the CLI flag is\n   * valid\n   */\n  if (!['session', 'access_tokens', 'basic_auth'].includes(guard!)) {\n    command.logger.error(\n      `The selected guard \"${guard}\" is invalid. Select one from: session, access_tokens, basic_auth`\n    )\n    command.exitCode = 1\n    return\n  }\n\n  await presetAuth(codemods, command.app, {\n    guard: guard as 'session' | 'access_tokens' | 'basic_auth',\n    userProvider: 'lucid',\n  })\n}\n","/*\n * @adonisjs/lucid\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * A symbol to identify the type of the real user for a given\n * user provider\n */\nexport const PROVIDER_REAL_USER = Symbol.for('PROVIDER_REAL_USER')\n\n/**\n * A symbol to identify the type for the events emitted by a guard\n */\nexport const GUARD_KNOWN_EVENTS = Symbol.for('GUARD_KNOWN_EVENTS')\n","/*\n * @adonisjs/auth\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { configProvider } from '@adonisjs/core'\nimport type { ConfigProvider } from '@adonisjs/core/types'\nimport type { GuardConfigProvider, GuardFactory } from './types.js'\n\n/**\n * Config resolved by the \"defineConfig\" method\n */\nexport type ResolvedAuthConfig<\n  KnownGuards extends Record<string, GuardFactory | GuardConfigProvider<GuardFactory>>,\n> = {\n  default: keyof KnownGuards\n  guards: {\n    [K in keyof KnownGuards]: KnownGuards[K] extends GuardConfigProvider<infer A>\n      ? A\n      : KnownGuards[K]\n  }\n}\n\n/**\n * Define configuration for the auth package. The function returns\n * a config provider that is invoked inside the auth service\n * provider\n */\nexport function defineConfig<\n  KnownGuards extends Record<string, GuardFactory | GuardConfigProvider<GuardFactory>>,\n>(config: {\n  default: keyof KnownGuards\n  guards: KnownGuards\n}): ConfigProvider<ResolvedAuthConfig<KnownGuards>> {\n  return configProvider.create(async (app) => {\n    const guardsList = Object.keys(config.guards)\n    const guards = {} as Record<string, GuardFactory>\n\n    for (let guardName of guardsList) {\n      const guard = config.guards[guardName]\n      if (typeof guard === 'function') {\n        guards[guardName] = guard\n      } else {\n        guards[guardName] = await guard.resolver(guardName, app)\n      }\n    }\n\n    return {\n      default: config.default,\n      guards: guards,\n    } as ResolvedAuthConfig<KnownGuards>\n  })\n}\n","/*\n * @adonisjs/auth\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport * as errors from './src/errors.js'\nexport { configure } from './configure.js'\nexport * as symbols from './src/symbols.js'\nexport { AuthManager } from './src/auth_manager.js'\nexport { defineConfig } from './src/define_config.js'\nexport { Authenticator } from './src/authenticator.js'\nexport { AuthenticatorClient } from './src/authenticator_client.js'\nimport type { withAuthFinder as withAuthFinderType } from './src/mixins/lucid.js'\n\nfunction isModuleInstalled(moduleName: string) {\n  try {\n    import.meta.resolve(moduleName)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\n/**\n * @deprecated Import `withAuthFinder` from `@adonisjs/auth/mixins/lucid` instead\n */\nlet withAuthFinder: typeof withAuthFinderType\n\nif (isModuleInstalled('@adonisjs/lucid')) {\n  const { withAuthFinder: withAuthFinderFn } = await import('./src/mixins/lucid.js')\n  withAuthFinder = withAuthFinderFn\n}\n\nexport { withAuthFinder }\n"],"mappings":";;;;;;;;;;;;;;AASA,SAAS,kBAAkB;AAM3B,eAAsB,UAAU,SAAoB;AAClD,QAAM,WAAW,MAAM,QAAQ,eAAe;AAC9C,MAAI,QAA4B,QAAQ,YAAY;AAMpD,MAAI,UAAU,QAAW;AACvB,YAAQ,MAAM,QAAQ,OAAO;AAAA,MAC3B;AAAA,MACA;AAAA,QACE;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,QACX;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,QACX;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,QACX;AAAA,MACF;AAAA,MACA;AAAA,QACE,SAAS,OAAO;AACd,iBAAO,CAAC,CAAC;AAAA,QACX;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAMA,MAAI,CAAC,CAAC,WAAW,iBAAiB,YAAY,EAAE,SAAS,KAAM,GAAG;AAChE,YAAQ,OAAO;AAAA,MACb,uBAAuB,KAAK;AAAA,IAC9B;AACA,YAAQ,WAAW;AACnB;AAAA,EACF;AAEA,QAAM,WAAW,UAAU,QAAQ,KAAK;AAAA,IACtC;AAAA,IACA,cAAc;AAAA,EAChB,CAAC;AACH;;;AChEA;AAAA;AAAA;AAAA;AAAA;AAaO,IAAM,qBAAqB,OAAO,IAAI,oBAAoB;AAK1D,IAAM,qBAAqB,OAAO,IAAI,oBAAoB;;;ACTjE,SAAS,sBAAsB;AAuBxB,SAAS,aAEd,QAGkD;AAClD,SAAO,eAAe,OAAO,OAAO,QAAQ;AAC1C,UAAM,aAAa,OAAO,KAAK,OAAO,MAAM;AAC5C,UAAM,SAAS,CAAC;AAEhB,aAAS,aAAa,YAAY;AAChC,YAAM,QAAQ,OAAO,OAAO,SAAS;AACrC,UAAI,OAAO,UAAU,YAAY;AAC/B,eAAO,SAAS,IAAI;AAAA,MACtB,OAAO;AACL,eAAO,SAAS,IAAI,MAAM,MAAM,SAAS,WAAW,GAAG;AAAA,MACzD;AAAA,IACF;AAEA,WAAO;AAAA,MACL,SAAS,OAAO;AAAA,MAChB;AAAA,IACF;AAAA,EACF,CAAC;AACH;;;ACtCA,SAAS,kBAAkB,YAAoB;AAC7C,MAAI;AACF,gBAAY,QAAQ,UAAU;AAC9B,WAAO;AAAA,EACT,SAAS,GAAG;AACV,WAAO;AAAA,EACT;AACF;AAKA,IAAI;AAEJ,IAAI,kBAAkB,iBAAiB,GAAG;AACxC,QAAM,EAAE,gBAAgB,iBAAiB,IAAI,MAAM,OAAO,uBAAuB;AACjF,mBAAiB;AACnB;","names":[]}