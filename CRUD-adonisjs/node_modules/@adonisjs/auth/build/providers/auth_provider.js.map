{"version":3,"sources":["../../providers/auth_provider.ts"],"sourcesContent":["/*\n * @adonisjs/auth\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { configProvider } from '@adonisjs/core'\nimport { RuntimeException } from '@poppinss/utils'\nimport type { ApplicationService } from '@adonisjs/core/types'\n\nimport type { AuthService } from '../src/types.js'\nimport { AuthManager } from '../src/auth_manager.js'\n\ndeclare module '@adonisjs/core/types' {\n  export interface ContainerBindings {\n    'auth.manager': AuthService\n  }\n}\n\nexport default class AuthProvider {\n  constructor(protected app: ApplicationService) {}\n\n  register() {\n    this.app.container.singleton('auth.manager', async () => {\n      const authConfigProvider = this.app.config.get('auth')\n      const config = await configProvider.resolve<any>(this.app, authConfigProvider)\n\n      if (!config) {\n        throw new RuntimeException(\n          'Invalid config exported from \"config/auth.ts\" file. Make sure to use the defineConfig method'\n        )\n      }\n\n      return new AuthManager(config)\n    })\n  }\n}\n"],"mappings":";;;;;;;;AASA,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB;AAYjC,IAAqB,eAArB,MAAkC;AAAA,EAChC,YAAsB,KAAyB;AAAzB;AAAA,EAA0B;AAAA,EAEhD,WAAW;AACT,SAAK,IAAI,UAAU,UAAU,gBAAgB,YAAY;AACvD,YAAM,qBAAqB,KAAK,IAAI,OAAO,IAAI,MAAM;AACrD,YAAM,SAAS,MAAM,eAAe,QAAa,KAAK,KAAK,kBAAkB;AAE7E,UAAI,CAAC,QAAQ;AACX,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,aAAO,IAAI,YAAY,MAAM;AAAA,IAC/B,CAAC;AAAA,EACH;AACF;","names":[]}