{"version":3,"sources":["../src/base_event.ts"],"sourcesContent":["/*\n * @adonisjs/events\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { RuntimeException } from '@poppinss/utils'\nimport type { Emitter } from './emitter.js'\n\n/**\n * Base event adds ability to a class to act as an event. You can emit the\n * event by calling \"Event.dispatch\" method.\n */\nexport class BaseEvent {\n  constructor(..._: any[]) {}\n\n  /**\n   * The emitter to use for dispatching events\n   */\n  static emitter?: Emitter<any>\n\n  /**\n   * Specify the emitter instance to use for dispatching events\n   */\n  static useEmitter(emitter: Emitter<any>) {\n    this.emitter = emitter\n  }\n\n  /**\n   * Dispatch the current class as an event. The method takes the arguments\n   * accepted by the class constructor.\n   */\n  static async dispatch<T extends typeof BaseEvent>(this: T, ...args: ConstructorParameters<T>) {\n    if (!this.emitter) {\n      throw new RuntimeException(\n        `Cannot dispatch \"${this.name}\" event. Make sure to pass emitter to the \"BaseEvent\" class for dispatch method to work`\n      )\n    }\n\n    return this.emitter.emit<T>(this, new this(...args) as InstanceType<T>)\n  }\n}\n"],"mappings":";;;;;AASA,SAAS,wBAAwB;AAO1B,IAAM,YAAN,MAAgB;AAAA,EACrB,eAAe,GAAU;AAAA,EAAC;AAAA;AAAA;AAAA;AAAA,EAK1B,OAAO;AAAA;AAAA;AAAA;AAAA,EAKP,OAAO,WAAW,SAAuB;AACvC,SAAK,UAAU;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,YAAiD,MAAgC;AAC5F,QAAI,CAAC,KAAK,SAAS;AACjB,YAAM,IAAI;AAAA,QACR,oBAAoB,KAAK,IAAI;AAAA,MAC/B;AAAA,IACF;AAEA,WAAO,KAAK,QAAQ,KAAQ,MAAM,IAAI,KAAK,GAAG,IAAI,CAAoB;AAAA,EACxE;AACF;","names":[]}