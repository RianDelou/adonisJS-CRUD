{"version":3,"sources":["../stubs/main.ts","../configure.ts"],"sourcesContent":["/*\n * @adonisjs/cors\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { dirname } from 'node:path'\nimport { fileURLToPath } from 'node:url'\n\nexport const stubsRoot = dirname(fileURLToPath(import.meta.url))\n","/*\n * @adonisjs/cors\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { stubsRoot } from './stubs/main.js'\nimport type Configure from '@adonisjs/core/commands/configure'\n\n/**\n * Configures the package\n */\nexport async function configure(command: Configure) {\n  const codemods = await command.createCodemods()\n  await codemods.makeUsingStub(stubsRoot, 'config/cors.stub', {})\n\n  /**\n   * Register middleware\n   */\n  await codemods.registerMiddleware('server', [\n    {\n      path: '@adonisjs/cors/cors_middleware',\n    },\n  ])\n\n  /**\n   * Register service provider\n   */\n  await codemods.updateRcFile((rcFile) => {\n    rcFile.addProvider('@adonisjs/cors/cors_provider')\n  })\n}\n"],"mappings":";;;;;AASA,SAAS,eAAe;AACxB,SAAS,qBAAqB;AAEvB,IAAM,YAAY,QAAQ,cAAc,YAAY,GAAG,CAAC;;;ACG/D,eAAsB,UAAU,SAAoB;AAClD,QAAM,WAAW,MAAM,QAAQ,eAAe;AAC9C,QAAM,SAAS,cAAc,WAAW,oBAAoB,CAAC,CAAC;AAK9D,QAAM,SAAS,mBAAmB,UAAU;AAAA,IAC1C;AAAA,MACE,MAAM;AAAA,IACR;AAAA,EACF,CAAC;AAKD,QAAM,SAAS,aAAa,CAAC,WAAW;AACtC,WAAO,YAAY,8BAA8B;AAAA,EACnD,CAAC;AACH;","names":[]}