{"version":3,"sources":["../../../src/auth/main.ts"],"sourcesContent":["/*\n * @adonisjs/presets\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { joinToURL } from '@poppinss/utils'\nimport type { Application } from '@adonisjs/core/app'\nimport type { Codemods } from '@adonisjs/core/ace/codemods'\n\nconst STUBS_ROOT = joinToURL(import.meta.url, './stubs')\n\n/**\n * Configures the \"@adonisjs/auth\" package with one of the\n * bundled guards and user providers\n */\nexport async function presetAuth(\n  codemods: Codemods,\n  app: Application<any>,\n  options: {\n    guard: 'session' | 'access_tokens' | 'basic_auth'\n    userProvider: 'lucid'\n  }\n) {\n  const configStub = `config/${options.guard}_with_${options.userProvider}.stub`\n  const modelStub = `make/model/user_with_${options.guard}.stub`\n\n  /**\n   * Publish config file\n   */\n  await codemods.makeUsingStub(STUBS_ROOT, configStub, {})\n\n  /**\n   * Register provider to the rcfile\n   */\n  await codemods.updateRcFile((rcFile) => {\n    rcFile.addProvider('@adonisjs/auth/auth_provider')\n  })\n\n  /**\n   * Publish migration file\n   */\n  await codemods.makeUsingStub(STUBS_ROOT, 'make/migration/users.stub', {\n    entity: app.generators.createEntity('users'),\n    migration: {\n      folder: 'database/migrations',\n      fileName: `${new Date().getTime()}_create_users_table.ts`,\n    },\n  })\n\n  /**\n   * Publish access tokens migration file when selected\n   * access tokens guard\n   */\n  if (options.guard === 'access_tokens') {\n    await codemods.makeUsingStub(STUBS_ROOT, 'make/migration/access_tokens.stub', {\n      entity: app.generators.createEntity('access_tokens'),\n      migration: {\n        folder: 'database/migrations',\n        fileName: `${new Date().getTime()}_create_access_tokens_table.ts`,\n      },\n    })\n  }\n\n  /**\n   * Create model\n   */\n  await codemods.makeUsingStub(STUBS_ROOT, modelStub, {\n    entity: app.generators.createEntity('users'),\n  })\n\n  /**\n   * Publish auth middleware\n   */\n  await codemods.makeUsingStub(STUBS_ROOT, 'make/middleware/auth.stub', {\n    entity: app.generators.createEntity('auth'),\n  })\n\n  /**\n   * Publish guest middleware only when using the session\n   * guard\n   */\n  if (options.guard === 'session') {\n    await codemods.makeUsingStub(STUBS_ROOT, 'make/middleware/guest.stub', {\n      entity: app.generators.createEntity('guest'),\n    })\n  }\n\n  /**\n   * Register middleware\n   */\n  await codemods.registerMiddleware('router', [\n    {\n      path: '@adonisjs/auth/initialize_auth_middleware',\n    },\n  ])\n  await codemods.registerMiddleware('named', [\n    {\n      name: 'auth',\n      path: '#middleware/auth_middleware',\n    },\n    ...(options.guard === 'session'\n      ? [\n          {\n            name: 'guest',\n            path: '#middleware/guest_middleware',\n          },\n        ]\n      : []),\n  ])\n}\n"],"mappings":";AASA,SAAS,iBAAiB;AAI1B,IAAM,aAAa,UAAU,YAAY,KAAK,SAAS;AAMvD,eAAsB,WACpB,UACA,KACA,SAIA;AACA,QAAM,aAAa,UAAU,QAAQ,KAAK,SAAS,QAAQ,YAAY;AACvE,QAAM,YAAY,wBAAwB,QAAQ,KAAK;AAKvD,QAAM,SAAS,cAAc,YAAY,YAAY,CAAC,CAAC;AAKvD,QAAM,SAAS,aAAa,CAAC,WAAW;AACtC,WAAO,YAAY,8BAA8B;AAAA,EACnD,CAAC;AAKD,QAAM,SAAS,cAAc,YAAY,6BAA6B;AAAA,IACpE,QAAQ,IAAI,WAAW,aAAa,OAAO;AAAA,IAC3C,WAAW;AAAA,MACT,QAAQ;AAAA,MACR,UAAU,IAAG,oBAAI,KAAK,GAAE,QAAQ,CAAC;AAAA,IACnC;AAAA,EACF,CAAC;AAMD,MAAI,QAAQ,UAAU,iBAAiB;AACrC,UAAM,SAAS,cAAc,YAAY,qCAAqC;AAAA,MAC5E,QAAQ,IAAI,WAAW,aAAa,eAAe;AAAA,MACnD,WAAW;AAAA,QACT,QAAQ;AAAA,QACR,UAAU,IAAG,oBAAI,KAAK,GAAE,QAAQ,CAAC;AAAA,MACnC;AAAA,IACF,CAAC;AAAA,EACH;AAKA,QAAM,SAAS,cAAc,YAAY,WAAW;AAAA,IAClD,QAAQ,IAAI,WAAW,aAAa,OAAO;AAAA,EAC7C,CAAC;AAKD,QAAM,SAAS,cAAc,YAAY,6BAA6B;AAAA,IACpE,QAAQ,IAAI,WAAW,aAAa,MAAM;AAAA,EAC5C,CAAC;AAMD,MAAI,QAAQ,UAAU,WAAW;AAC/B,UAAM,SAAS,cAAc,YAAY,8BAA8B;AAAA,MACrE,QAAQ,IAAI,WAAW,aAAa,OAAO;AAAA,IAC7C,CAAC;AAAA,EACH;AAKA,QAAM,SAAS,mBAAmB,UAAU;AAAA,IAC1C;AAAA,MACE,MAAM;AAAA,IACR;AAAA,EACF,CAAC;AACD,QAAM,SAAS,mBAAmB,SAAS;AAAA,IACzC;AAAA,MACE,MAAM;AAAA,MACN,MAAM;AAAA,IACR;AAAA,IACA,GAAI,QAAQ,UAAU,YAClB;AAAA,MACE;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF,IACA,CAAC;AAAA,EACP,CAAC;AACH;","names":[]}