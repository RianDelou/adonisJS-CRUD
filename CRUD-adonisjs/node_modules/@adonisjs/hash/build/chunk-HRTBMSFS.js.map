{"version":3,"sources":["../src/phc_formatter.ts"],"sourcesContent":["/*\n * @adonisjs/hash\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n// @ts-expect-error\nimport phc from '@phc/format'\nimport { PhcNode } from './types.js'\n\n/**\n * Phc formatter is used to serialize a hash to a phc string and\n * deserialize it back to a PHC object.\n */\nexport class PhcFormatter<\n  Params extends Record<string, string | number> = Record<string, string | number>,\n> {\n  /**\n   * Serialize salt and hash with predefined options.\n   */\n  serialize(\n    salt: Buffer,\n    hash: Buffer,\n    options: { id: string; params?: Params; version?: number | string }\n  ): string {\n    return phc.serialize({\n      id: options.id,\n      version: options.version,\n      params: options.params,\n      salt,\n      hash,\n    })\n  }\n\n  /**\n   * Deserialize a PHC string to an object\n   */\n  deserialize(phcString: string): PhcNode<Params> {\n    return phc.deserialize(phcString)\n  }\n}\n"],"mappings":";AAUA,OAAO,SAAS;AAOT,IAAM,eAAN,MAEL;AAAA;AAAA;AAAA;AAAA,EAIA,UACE,MACA,MACA,SACQ;AACR,WAAO,IAAI,UAAU;AAAA,MACnB,IAAI,QAAQ;AAAA,MACZ,SAAS,QAAQ;AAAA,MACjB,QAAQ,QAAQ;AAAA,MAChB;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,WAAoC;AAC9C,WAAO,IAAI,YAAY,SAAS;AAAA,EAClC;AACF;","names":[]}