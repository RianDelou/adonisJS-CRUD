{"version":3,"sources":["../src/helpers.ts"],"sourcesContent":["/*\n * @adonisjs/hash\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { promisify } from 'node:util'\nimport { randomBytes, scrypt, type ScryptOptions } from 'node:crypto'\n\nexport const MAX_UINT32 = 2 ** 32 - 1\nexport const MAX_UINT24 = 2 ** 24 - 1\n\n/**\n * Validates a number to be within a given range.\n */\nexport class RangeValidator {\n  static validate(label: string, value: unknown, range: [number, number]) {\n    if (typeof value !== 'number' || !Number.isInteger(value)) {\n      throw new TypeError(`The \"${label}\" option must be an integer`)\n    }\n\n    const [min, max] = range\n\n    if (value < min || value > max) {\n      throw new TypeError(\n        `The \"${label}\" option must be in the range (${min} <= ${label} <= ${max})`\n      )\n    }\n  }\n}\n\n/**\n * Validates a value to be one of the allowed values\n */\nexport class EnumValidator {\n  static validate(label: string, value: unknown, allowedValues: any[]) {\n    if (!allowedValues.includes(value)) {\n      throw new TypeError(`The \"${label}\" option must be one of: ${allowedValues}`)\n    }\n  }\n}\n\n/**\n * Async function to generate random bytes\n */\nexport const randomBytesAsync = promisify(randomBytes)\n\n/**\n * Async version of scrypt.\n */\nexport const scryptAsync = promisify<string, Buffer, number, ScryptOptions, Buffer>(scrypt)\n"],"mappings":";AASA,SAAS,iBAAiB;AAC1B,SAAS,aAAa,cAAkC;AAEjD,IAAM,aAAa,KAAK,KAAK;AAC7B,IAAM,aAAa,KAAK,KAAK;AAK7B,IAAM,iBAAN,MAAqB;AAAA,EAC1B,OAAO,SAAS,OAAe,OAAgB,OAAyB;AACtE,QAAI,OAAO,UAAU,YAAY,CAAC,OAAO,UAAU,KAAK,GAAG;AACzD,YAAM,IAAI,UAAU,QAAQ,KAAK,6BAA6B;AAAA,IAChE;AAEA,UAAM,CAAC,KAAK,GAAG,IAAI;AAEnB,QAAI,QAAQ,OAAO,QAAQ,KAAK;AAC9B,YAAM,IAAI;AAAA,QACR,QAAQ,KAAK,kCAAkC,GAAG,OAAO,KAAK,OAAO,GAAG;AAAA,MAC1E;AAAA,IACF;AAAA,EACF;AACF;AAKO,IAAM,gBAAN,MAAoB;AAAA,EACzB,OAAO,SAAS,OAAe,OAAgB,eAAsB;AACnE,QAAI,CAAC,cAAc,SAAS,KAAK,GAAG;AAClC,YAAM,IAAI,UAAU,QAAQ,KAAK,4BAA4B,aAAa,EAAE;AAAA,IAC9E;AAAA,EACF;AACF;AAKO,IAAM,mBAAmB,UAAU,WAAW;AAK9C,IAAM,cAAc,UAAyD,MAAM;","names":[]}