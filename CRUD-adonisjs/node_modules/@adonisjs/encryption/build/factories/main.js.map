{"version":3,"sources":["../../factories/encryption.ts"],"sourcesContent":["/*\n * @adonisjs/encryption\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Encryption } from '../src/encryption.js'\nimport type { EncryptionOptions } from '../src/types.js'\n\n/**\n * Encryption factory is used to generate encryption class instances for\n * testing\n */\nexport class EncryptionFactory {\n  #options: EncryptionOptions = {\n    secret: 'averylongrandomsecretkey',\n  }\n\n  /**\n   * Merge encryption factory options\n   */\n  merge(options: Partial<EncryptionOptions>) {\n    Object.assign(this.#options, options)\n    return this\n  }\n\n  /**\n   * Create instance of encryption class\n   */\n  create() {\n    return new Encryption(this.#options)\n  }\n}\n"],"mappings":";;;;;AAgBO,IAAM,oBAAN,MAAwB;AAAA,EAC7B,WAA8B;AAAA,IAC5B,QAAQ;AAAA,EACV;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,SAAqC;AACzC,WAAO,OAAO,KAAK,UAAU,OAAO;AACpC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACP,WAAO,IAAI,WAAW,KAAK,QAAQ;AAAA,EACrC;AACF;","names":[]}