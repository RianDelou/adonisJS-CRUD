/**
 * @deprecated
 * Use "is" helpers instead. The types helpers exists
 * for backward compatibility
 */
declare const types: {
    lookup: ((value: unknown) => import("@sindresorhus/is").TypeName) & {
        all: typeof import("@sindresorhus/is").isAll;
        any: typeof import("@sindresorhus/is").isAny;
        array: typeof import("@sindresorhus/is").isArray;
        arrayBuffer: typeof import("@sindresorhus/is").isArrayBuffer;
        arrayLike: typeof import("@sindresorhus/is").isArrayLike;
        asyncFunction: typeof import("@sindresorhus/is").isAsyncFunction;
        asyncGenerator: typeof import("@sindresorhus/is").isAsyncGenerator;
        asyncGeneratorFunction: typeof import("@sindresorhus/is").isAsyncGeneratorFunction;
        asyncIterable: typeof import("@sindresorhus/is").isAsyncIterable;
        bigint: typeof import("@sindresorhus/is").isBigint;
        bigInt64Array: typeof import("@sindresorhus/is").isBigInt64Array;
        bigUint64Array: typeof import("@sindresorhus/is").isBigUint64Array;
        blob: typeof import("@sindresorhus/is").isBlob;
        boolean: typeof import("@sindresorhus/is").isBoolean;
        boundFunction: typeof import("@sindresorhus/is").isBoundFunction;
        buffer: typeof import("@sindresorhus/is").isBuffer;
        class: typeof import("@sindresorhus/is").isClass;
        class_: typeof import("@sindresorhus/is").isClass;
        dataView: typeof import("@sindresorhus/is").isDataView;
        date: typeof import("@sindresorhus/is").isDate;
        detect: (value: unknown) => import("@sindresorhus/is").TypeName;
        directInstanceOf: typeof import("@sindresorhus/is").isDirectInstanceOf;
        domElement: typeof import("@sindresorhus/is").isHtmlElement;
        emptyArray: typeof import("@sindresorhus/is").isEmptyArray;
        emptyMap: typeof import("@sindresorhus/is").isEmptyMap;
        emptyObject: typeof import("@sindresorhus/is").isEmptyObject;
        emptySet: typeof import("@sindresorhus/is").isEmptySet;
        emptyString: typeof import("@sindresorhus/is").isEmptyString;
        emptyStringOrWhitespace: typeof import("@sindresorhus/is").isEmptyStringOrWhitespace;
        enumCase: typeof import("@sindresorhus/is").isEnumCase;
        error: typeof import("@sindresorhus/is").isError;
        evenInteger: typeof import("@sindresorhus/is").isEvenInteger;
        falsy: typeof import("@sindresorhus/is").isFalsy;
        float32Array: typeof import("@sindresorhus/is").isFloat32Array;
        float64Array: typeof import("@sindresorhus/is").isFloat64Array;
        formData: typeof import("@sindresorhus/is").isFormData;
        function: typeof import("@sindresorhus/is").isFunction;
        function_: typeof import("@sindresorhus/is").isFunction;
        generator: typeof import("@sindresorhus/is").isGenerator;
        generatorFunction: typeof import("@sindresorhus/is").isGeneratorFunction;
        htmlElement: typeof import("@sindresorhus/is").isHtmlElement;
        infinite: typeof import("@sindresorhus/is").isInfinite;
        inRange: typeof import("@sindresorhus/is").isInRange;
        int16Array: typeof import("@sindresorhus/is").isInt16Array;
        int32Array: typeof import("@sindresorhus/is").isInt32Array;
        int8Array: typeof import("@sindresorhus/is").isInt8Array;
        integer: typeof import("@sindresorhus/is").isInteger;
        iterable: typeof import("@sindresorhus/is").isIterable;
        map: typeof import("@sindresorhus/is").isMap;
        nan: typeof import("@sindresorhus/is").isNan;
        nativePromise: typeof import("@sindresorhus/is").isNativePromise;
        negativeNumber: typeof import("@sindresorhus/is").isNegativeNumber;
        nodeStream: typeof import("@sindresorhus/is").isNodeStream;
        nonEmptyArray: typeof import("@sindresorhus/is").isNonEmptyArray;
        nonEmptyMap: typeof import("@sindresorhus/is").isNonEmptyMap;
        nonEmptyObject: typeof import("@sindresorhus/is").isNonEmptyObject;
        nonEmptySet: typeof import("@sindresorhus/is").isNonEmptySet;
        nonEmptyString: typeof import("@sindresorhus/is").isNonEmptyString;
        nonEmptyStringAndNotWhitespace: typeof import("@sindresorhus/is").isNonEmptyStringAndNotWhitespace;
        null: typeof import("@sindresorhus/is").isNull;
        null_: typeof import("@sindresorhus/is").isNull;
        nullOrUndefined: typeof import("@sindresorhus/is").isNullOrUndefined;
        number: typeof import("@sindresorhus/is").isNumber;
        numericString: typeof import("@sindresorhus/is").isNumericString;
        object: typeof import("@sindresorhus/is").isObject;
        observable: typeof import("@sindresorhus/is").isObservable;
        oddInteger: typeof import("@sindresorhus/is").isOddInteger;
        plainObject: typeof import("@sindresorhus/is").isPlainObject;
        positiveNumber: typeof import("@sindresorhus/is").isPositiveNumber;
        primitive: typeof import("@sindresorhus/is").isPrimitive;
        promise: typeof import("@sindresorhus/is").isPromise;
        propertyKey: typeof import("@sindresorhus/is").isPropertyKey;
        regExp: typeof import("@sindresorhus/is").isRegExp;
        safeInteger: typeof import("@sindresorhus/is").isSafeInteger;
        set: typeof import("@sindresorhus/is").isSet;
        sharedArrayBuffer: typeof import("@sindresorhus/is").isSharedArrayBuffer;
        string: typeof import("@sindresorhus/is").isString;
        symbol: typeof import("@sindresorhus/is").isSymbol;
        truthy: typeof import("@sindresorhus/is").isTruthy;
        tupleLike: typeof import("@sindresorhus/is").isTupleLike;
        typedArray: typeof import("@sindresorhus/is").isTypedArray;
        uint16Array: typeof import("@sindresorhus/is").isUint16Array;
        uint32Array: typeof import("@sindresorhus/is").isUint32Array;
        uint8Array: typeof import("@sindresorhus/is").isUint8Array;
        uint8ClampedArray: typeof import("@sindresorhus/is").isUint8ClampedArray;
        undefined: typeof import("@sindresorhus/is").isUndefined;
        urlInstance: typeof import("@sindresorhus/is").isUrlInstance;
        urlSearchParams: typeof import("@sindresorhus/is").isUrlSearchParams;
        urlString: typeof import("@sindresorhus/is").isUrlString;
        validDate: typeof import("@sindresorhus/is").isValidDate;
        validLength: typeof import("@sindresorhus/is").isValidLength;
        weakMap: typeof import("@sindresorhus/is").isWeakMap;
        weakRef: typeof import("@sindresorhus/is").isWeakRef;
        weakSet: typeof import("@sindresorhus/is").isWeakSet;
        whitespaceString: typeof import("@sindresorhus/is").isWhitespaceString;
    };
    isNull: typeof import("@sindresorhus/is").isNull;
    isBoolean: typeof import("@sindresorhus/is").isBoolean;
    isBuffer: typeof import("@sindresorhus/is").isBuffer;
    isNumber: typeof import("@sindresorhus/is").isNumber;
    isString: typeof import("@sindresorhus/is").isString;
    isArguments: any;
    isObject: typeof import("@sindresorhus/is").isObject;
    isDate: typeof import("@sindresorhus/is").isDate;
    isArray: typeof import("@sindresorhus/is").isArray;
    isRegexp: typeof import("@sindresorhus/is").isRegExp;
    isError: typeof import("@sindresorhus/is").isError;
    isFunction: typeof import("@sindresorhus/is").isFunction;
    isClass: typeof import("@sindresorhus/is").isClass;
    isInteger: typeof import("@sindresorhus/is").isInteger;
    isFloat(value: number): value is number;
    isDecimal(value: string | number, options?: {
        decimalPlaces?: string;
    }): boolean;
};
export default types;
