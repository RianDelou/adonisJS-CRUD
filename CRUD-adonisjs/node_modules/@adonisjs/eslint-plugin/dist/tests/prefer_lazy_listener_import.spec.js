"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const runner_1 = require("@japa/runner");
const ts_eslint_1 = require("@typescript-eslint/utils/ts-eslint");
const prefer_lazy_listener_import_1 = __importDefault(require("../src/rules/prefer_lazy_listener_import"));
const valids = [
    `
  import emitter from '@adonisjs/core/services/emitter'
  const SendVerificationEmail = () => import('#listeners/send_verification_email')

  emitter.on('user:registered', [SendVerificationEmail, 'handle'])
  `,
];
const invalids = [
    [
        `
    import emitter from '@adonisjs/core/services/emitter'
    import SendVerificationEmail from '#listeners/send_verification_email'

    emitter.on('user:registered', [SendVerificationEmail, 'handle'])
    `,
        `
    import emitter from '@adonisjs/core/services/emitter'
    const SendVerificationEmail = () => import('#listeners/send_verification_email')

    emitter.on('user:registered', [SendVerificationEmail, 'handle'])
    `,
    ],
];
(0, runner_1.test)('Prefer lazy event listener import', ({ assert }) => {
    const ruleTester = new ts_eslint_1.RuleTester({
        parser: require.resolve('@typescript-eslint/parser'),
    });
    ruleTester.run('prefer-lazy-listener-import', prefer_lazy_listener_import_1.default, {
        valid: valids,
        invalid: invalids.map((invalid) => ({
            code: invalid[0],
            output: invalid[1],
            errors: [{ messageId: 'preferLazyListenerImport' }],
        })),
    });
});
