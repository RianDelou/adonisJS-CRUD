import type tsStatic from 'typescript';
import type { SourceFilesManagerOptions } from './types.js';
/**
 * Exposes the API to manage the source files for a typescript project.
 * All paths are stored with unix paths
 */
export declare class SourceFilesManager {
    #private;
    constructor(appRoot: string, options: SourceFilesManagerOptions);
    /**
     * Add a new source file to the list of project files. This is helpful
     * when new source files are added after the initial typescript
     * build.
     */
    add(filePath: string): void;
    /**
     * Bumps the project file version. This is required to tell the
     * typescript compiler that file has been changed.
     */
    bumpVersion(filePath: string): void;
    /**
     * Remove file from the list of existing source files
     */
    remove(filePath: string): void;
    /**
     * Returns true when filePath is part of the source files after checking
     * them against `includes`, `excludes` and custom set of `files`.
     */
    isSourceFile(filePath: string): boolean;
    /**
     * Returns a copy of project source files
     */
    toJSON(): tsStatic.MapLike<{
        version: number;
    }>;
}
